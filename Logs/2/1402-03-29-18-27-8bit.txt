Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.


PS D:\2023-Spring\Synthesis\Project\python-brahma-master\python-brahma-master>  & 'D:\ProgramFiles\Anaconda3\envs\P39\python.exe' 'c:\Users\meyssam\.vscode\extensions\ms-python.python-2023.10.1\pythonFiles\lib\python\debugpy\adapter/../..\debugpy\launcher' '5400' '--' 'd:\2023-Spring\Synthesis\Project\python-brahma-master\python-brahma-master\cli.py'
Welcome to python-brahma. Type in a python function to specify the constraint.
E.g., `lambda y, a, b: y == a + b`
>>> lambda y, a: y == a | (a + 1)
<function <lambda> at 0x0000023E5AD265E0>
d:\2023-Spring\Synthesis\Project\python-brahma-master\python-brahma-master\cli.py:11: DeprecationWarning: inspect.getargspec() is deprecated since Python 3.0, use inspect.signature() or inspect.getfullargspec()
  arity = len(inspect.getargspec(constraint)[0]) - 1



synthesizer wfp_cons:
And(And(cur_locParam_0_0 >= 0, cur_locParam_0_0 < 4),
    And(cur_locParam_0_1 >= 0, cur_locParam_0_1 < 4),
    And(cur_locReturn_0 >= 1, cur_locReturn_0 < 4),  
    And(cur_locParam_1_0 >= 0, cur_locParam_1_0 < 4),
    And(cur_locReturn_1 >= 1, cur_locReturn_1 < 4),  
    And(cur_locParam_2_0 >= 0, cur_locParam_2_0 < 4),
    And(cur_locParam_2_1 >= 0, cur_locParam_2_1 < 4),
    And(cur_locReturn_2 >= 1, cur_locReturn_2 < 4),  
    And(cur_locOutput >= 0, cur_locOutput < 4),      
    cur_locInput_0 == 0,
    cur_locReturn_1 != cur_locReturn_0,
    cur_locReturn_2 != cur_locReturn_0,
    cur_locReturn_2 != cur_locReturn_1,
    cur_locParam_0_0 < cur_locReturn_0,
    cur_locParam_0_1 < cur_locReturn_0,
    cur_locParam_1_0 < cur_locReturn_1,
    cur_locParam_2_0 < cur_locReturn_2,
    cur_locParam_2_1 < cur_locReturn_2)



synthesizer adding max_len:



verifier adding conn_cons:
And(Implies(cur_locOutput == cur_locInput_0,
            ctr_valOutput == ctr_valInput_0),
    Implies(cur_locParam_0_0 == cur_locInput_0,
            ctr_valParam_0_0 == ctr_valInput_0),
    Implies(cur_locParam_0_0 == cur_locOutput,
            ctr_valParam_0_0 == ctr_valOutput),
    Implies(cur_locParam_0_1 == cur_locInput_0,
            ctr_valParam_0_1 == ctr_valInput_0),
    Implies(cur_locParam_0_1 == cur_locOutput,
            ctr_valParam_0_1 == ctr_valOutput),
    Implies(cur_locParam_0_1 == cur_locParam_0_0,
            ctr_valParam_0_1 == ctr_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locInput_0,
            ctr_valReturn_0 == ctr_valInput_0),
    Implies(cur_locReturn_0 == cur_locOutput,
            ctr_valReturn_0 == ctr_valOutput),
    Implies(cur_locReturn_0 == cur_locParam_0_0,
            ctr_valReturn_0 == ctr_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locParam_0_1,
            ctr_valReturn_0 == ctr_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locInput_0,
            ctr_valParam_1_0 == ctr_valInput_0),
    Implies(cur_locParam_1_0 == cur_locOutput,
            ctr_valParam_1_0 == ctr_valOutput),
    Implies(cur_locParam_1_0 == cur_locParam_0_0,
            ctr_valParam_1_0 == ctr_valParam_0_0),
    Implies(cur_locParam_1_0 == cur_locParam_0_1,
            ctr_valParam_1_0 == ctr_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locReturn_0,
            ctr_valParam_1_0 == ctr_valReturn_0),
    Implies(cur_locReturn_1 == cur_locInput_0,
            ctr_valReturn_1 == ctr_valInput_0),
    Implies(cur_locReturn_1 == cur_locOutput,
            ctr_valReturn_1 == ctr_valOutput),
    Implies(cur_locReturn_1 == cur_locParam_0_0,
            ctr_valReturn_1 == ctr_valParam_0_0),
    Implies(cur_locReturn_1 == cur_locParam_0_1,
            ctr_valReturn_1 == ctr_valParam_0_1),
    Implies(cur_locReturn_1 == cur_locReturn_0,
            ctr_valReturn_1 == ctr_valReturn_0),
    Implies(cur_locReturn_1 == cur_locParam_1_0,
            ctr_valReturn_1 == ctr_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locInput_0,
            ctr_valParam_2_0 == ctr_valInput_0),
    Implies(cur_locParam_2_0 == cur_locOutput,
            ctr_valParam_2_0 == ctr_valOutput),
    Implies(cur_locParam_2_0 == cur_locParam_0_0,
            ctr_valParam_2_0 == ctr_valParam_0_0),
    Implies(cur_locParam_2_0 == cur_locParam_0_1,
            ctr_valParam_2_0 == ctr_valParam_0_1),
    Implies(cur_locParam_2_0 == cur_locReturn_0,
            ctr_valParam_2_0 == ctr_valReturn_0),
    Implies(cur_locParam_2_0 == cur_locParam_1_0,
            ctr_valParam_2_0 == ctr_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locReturn_1,
            ctr_valParam_2_0 == ctr_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locInput_0,
            ctr_valParam_2_1 == ctr_valInput_0),
    Implies(cur_locParam_2_1 == cur_locOutput,
            ctr_valParam_2_1 == ctr_valOutput),
    Implies(cur_locParam_2_1 == cur_locParam_0_0,
            ctr_valParam_2_1 == ctr_valParam_0_0),
    Implies(cur_locParam_2_1 == cur_locParam_0_1,
            ctr_valParam_2_1 == ctr_valParam_0_1),
    Implies(cur_locParam_2_1 == cur_locReturn_0,
            ctr_valParam_2_1 == ctr_valReturn_0),
    Implies(cur_locParam_2_1 == cur_locParam_1_0,
            ctr_valParam_2_1 == ctr_valParam_1_0),
    Implies(cur_locParam_2_1 == cur_locReturn_1,
            ctr_valParam_2_1 == ctr_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locParam_2_0,
            ctr_valParam_2_1 == ctr_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locInput_0,
            ctr_valReturn_2 == ctr_valInput_0),
    Implies(cur_locReturn_2 == cur_locOutput,
            ctr_valReturn_2 == ctr_valOutput),
    Implies(cur_locReturn_2 == cur_locParam_0_0,
            ctr_valReturn_2 == ctr_valParam_0_0),
    Implies(cur_locReturn_2 == cur_locParam_0_1,
            ctr_valReturn_2 == ctr_valParam_0_1),
    Implies(cur_locReturn_2 == cur_locReturn_0,
            ctr_valReturn_2 == ctr_valReturn_0),
    Implies(cur_locReturn_2 == cur_locParam_1_0,
            ctr_valReturn_2 == ctr_valParam_1_0),
    Implies(cur_locReturn_2 == cur_locReturn_1,
            ctr_valReturn_2 == ctr_valReturn_1),
    Implies(cur_locReturn_2 == cur_locParam_2_0,
            ctr_valReturn_2 == ctr_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locParam_2_1,
            ctr_valReturn_2 == ctr_valParam_2_1))



verifier adding lib_cons:
And(ctr_valReturn_0 == ctr_valParam_0_0 + ctr_valParam_0_1,
    ctr_valReturn_1 == ctr_valParam_1_0 + 1,
    ctr_valReturn_2 == ctr_valParam_2_0 | ctr_valParam_2_1)



verifier adding NOT spec:
this is normal spec
ctr_valOutput == ctr_valInput_0 | ctr_valInput_0 + 1
> Running iteration 0 ...



syn_model in iteration  0 :

[cur_locParam_0_0 = 0,
 cur_locOutput = 0,
 cur_locParam_0_1 = 0,
 cur_locReturn_0 = 1,
 cur_locReturn_2 = 3,
 cur_locParam_2_1 = 0,
 cur_locParam_1_0 = 0,
 cur_locReturn_1 = 2,
 cur_locParam_2_0 = 0,
 cur_locInput_0 = 0]



add lInput to verifier:
0 == cur_locInput_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_0_0



add lparams to verifier:
0 == cur_locParam_0_1



add lRet to verifier:
1 == cur_locReturn_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_1_0



add lRet to verifier:
2 == cur_locReturn_1



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_2_0



add lparams to verifier:
0 == cur_locParam_2_1



add lRet to verifier:
3 == cur_locReturn_2



add lOutput to verifier:
0 == cur_locOutput



ver_model in iteration  0 :

[cur_locOutput = 0,
 cur_locParam_0_1 = 0,
 ctr_valParam_0_0 = 127,
 cur_locReturn_0 = 1,
 cur_locReturn_2 = 3,
 cur_locInput_0 = 0,
 ctr_valParam_0_1 = 127,
 ctr_valInput_0 = 127,
 ctr_valParam_2_0 = 127,
 cur_locReturn_1 = 2,
 ctr_valReturn_2 = 127,
 cur_locParam_0_0 = 0,
 ctr_valReturn_0 = 254,
 ctr_valReturn_1 = 128,
 ctr_valParam_1_0 = 127,
 ctr_valOutput = 127,
 cur_locParam_1_0 = 0,
 cur_locParam_2_1 = 0,
 cur_locParam_2_0 = 0,
 ctr_valParam_2_1 = 127]



add lib_cons to synthesizer:
And(c0_valReturn_0 == c0_valParam_0_0 + c0_valParam_0_1,
    c0_valReturn_1 == c0_valParam_1_0 + 1,
    c0_valReturn_2 == c0_valParam_2_0 | c0_valParam_2_1)



add conn_cons to synthesizer:
And(Implies(cur_locOutput == cur_locInput_0,
            c0_valOutput == c0_valInput_0),
    Implies(cur_locParam_0_0 == cur_locInput_0,
            c0_valParam_0_0 == c0_valInput_0),
    Implies(cur_locParam_0_0 == cur_locOutput,
            c0_valParam_0_0 == c0_valOutput),
    Implies(cur_locParam_0_1 == cur_locInput_0,
            c0_valParam_0_1 == c0_valInput_0),
    Implies(cur_locParam_0_1 == cur_locOutput,
            c0_valParam_0_1 == c0_valOutput),
    Implies(cur_locParam_0_1 == cur_locParam_0_0,
            c0_valParam_0_1 == c0_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locInput_0,
            c0_valReturn_0 == c0_valInput_0),
    Implies(cur_locReturn_0 == cur_locOutput,
            c0_valReturn_0 == c0_valOutput),
    Implies(cur_locReturn_0 == cur_locParam_0_0,
            c0_valReturn_0 == c0_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locParam_0_1,
            c0_valReturn_0 == c0_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locInput_0,
            c0_valParam_1_0 == c0_valInput_0),
    Implies(cur_locParam_1_0 == cur_locOutput,
            c0_valParam_1_0 == c0_valOutput),
    Implies(cur_locParam_1_0 == cur_locParam_0_0,
            c0_valParam_1_0 == c0_valParam_0_0),
    Implies(cur_locParam_1_0 == cur_locParam_0_1,
            c0_valParam_1_0 == c0_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locReturn_0,
            c0_valParam_1_0 == c0_valReturn_0),
    Implies(cur_locReturn_1 == cur_locInput_0,
            c0_valReturn_1 == c0_valInput_0),
    Implies(cur_locReturn_1 == cur_locOutput,
            c0_valReturn_1 == c0_valOutput),
    Implies(cur_locReturn_1 == cur_locParam_0_0,
            c0_valReturn_1 == c0_valParam_0_0),
    Implies(cur_locReturn_1 == cur_locParam_0_1,
            c0_valReturn_1 == c0_valParam_0_1),
    Implies(cur_locReturn_1 == cur_locReturn_0,
            c0_valReturn_1 == c0_valReturn_0),
    Implies(cur_locReturn_1 == cur_locParam_1_0,
            c0_valReturn_1 == c0_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locInput_0,
            c0_valParam_2_0 == c0_valInput_0),
    Implies(cur_locParam_2_0 == cur_locOutput,
            c0_valParam_2_0 == c0_valOutput),
    Implies(cur_locParam_2_0 == cur_locParam_0_0,
            c0_valParam_2_0 == c0_valParam_0_0),
    Implies(cur_locParam_2_0 == cur_locParam_0_1,
            c0_valParam_2_0 == c0_valParam_0_1),
    Implies(cur_locParam_2_0 == cur_locReturn_0,
            c0_valParam_2_0 == c0_valReturn_0),
    Implies(cur_locParam_2_0 == cur_locParam_1_0,
            c0_valParam_2_0 == c0_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locReturn_1,
            c0_valParam_2_0 == c0_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locInput_0,
            c0_valParam_2_1 == c0_valInput_0),
    Implies(cur_locParam_2_1 == cur_locOutput,
            c0_valParam_2_1 == c0_valOutput),
    Implies(cur_locParam_2_1 == cur_locParam_0_0,
            c0_valParam_2_1 == c0_valParam_0_0),
    Implies(cur_locParam_2_1 == cur_locParam_0_1,
            c0_valParam_2_1 == c0_valParam_0_1),
    Implies(cur_locParam_2_1 == cur_locReturn_0,
            c0_valParam_2_1 == c0_valReturn_0),
    Implies(cur_locParam_2_1 == cur_locParam_1_0,
            c0_valParam_2_1 == c0_valParam_1_0),
    Implies(cur_locParam_2_1 == cur_locReturn_1,
            c0_valParam_2_1 == c0_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locParam_2_0,
            c0_valParam_2_1 == c0_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locInput_0,
            c0_valReturn_2 == c0_valInput_0),
    Implies(cur_locReturn_2 == cur_locOutput,
            c0_valReturn_2 == c0_valOutput),
    Implies(cur_locReturn_2 == cur_locParam_0_0,
            c0_valReturn_2 == c0_valParam_0_0),
    Implies(cur_locReturn_2 == cur_locParam_0_1,
            c0_valReturn_2 == c0_valParam_0_1),
    Implies(cur_locReturn_2 == cur_locReturn_0,
            c0_valReturn_2 == c0_valReturn_0),
    Implies(cur_locReturn_2 == cur_locParam_1_0,
            c0_valReturn_2 == c0_valParam_1_0),
    Implies(cur_locReturn_2 == cur_locReturn_1,
            c0_valReturn_2 == c0_valReturn_1),
    Implies(cur_locReturn_2 == cur_locParam_2_0,
            c0_valReturn_2 == c0_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locParam_2_1,
            c0_valReturn_2 == c0_valParam_2_1))



synthesizer adding spec:
c0_valOutput == c0_valInput_0 | c0_valInput_0 + 1



add new... to verifier:


verifier adding new_cons:
127 == c0_valInput_0
> Running iteration 1 ...



syn_model in iteration  1 :

[cur_locOutput = 2,
 c0_valReturn_0 = 255,
 c0_valParam_0_1 = 128,
 c0_valReturn_1 = 128,
 cur_locParam_0_1 = 1,
 c0_valParam_2_1 = 128,
 cur_locReturn_0 = 2,
 cur_locReturn_2 = 3,
 cur_locInput_0 = 0,
 c0_valParam_1_0 = 127,
 c0_valReturn_2 = 128,
 c0_valOutput = 255,
 cur_locReturn_1 = 1,
 c0_valParam_2_0 = 128,
 cur_locParam_0_0 = 0,
 c0_valInput_0 = 127,
 c0_valParam_0_0 = 127,
 cur_locParam_2_1 = 1,
 cur_locParam_1_0 = 0,
 cur_locParam_2_0 = 1]



add lInput to verifier:
0 == cur_locInput_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_0_0



add lparams to verifier:
1 == cur_locParam_0_1



add lRet to verifier:
2 == cur_locReturn_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_1_0



add lRet to verifier:
1 == cur_locReturn_1



add new... to verifier:



add lparams to verifier:
1 == cur_locParam_2_0



add lparams to verifier:
1 == cur_locParam_2_1



add lRet to verifier:
3 == cur_locReturn_2



add lOutput to verifier:
2 == cur_locOutput



ver_model in iteration  1 :

[cur_locOutput = 2,
 cur_locParam_0_1 = 1,
 ctr_valParam_0_0 = 65,
 cur_locReturn_0 = 2,
 cur_locReturn_2 = 3,
 cur_locInput_0 = 0,
 ctr_valParam_0_1 = 66,
 ctr_valInput_0 = 65,
 ctr_valParam_2_0 = 66,
 cur_locReturn_1 = 1,
 ctr_valReturn_2 = 66,
 cur_locParam_0_0 = 0,
 ctr_valReturn_0 = 131,
 ctr_valReturn_1 = 66,
 ctr_valParam_1_0 = 65,
 ctr_valOutput = 131,
 cur_locParam_1_0 = 0,
 cur_locParam_2_1 = 1,
 cur_locParam_2_0 = 1,
 ctr_valParam_2_1 = 66]



add lib_cons to synthesizer:
And(c1_valReturn_0 == c1_valParam_0_0 + c1_valParam_0_1,
    c1_valReturn_1 == c1_valParam_1_0 + 1,
    c1_valReturn_2 == c1_valParam_2_0 | c1_valParam_2_1)



add conn_cons to synthesizer:
And(Implies(cur_locOutput == cur_locInput_0,
            c1_valOutput == c1_valInput_0),
    Implies(cur_locParam_0_0 == cur_locInput_0,
            c1_valParam_0_0 == c1_valInput_0),
    Implies(cur_locParam_0_0 == cur_locOutput,
            c1_valParam_0_0 == c1_valOutput),
    Implies(cur_locParam_0_1 == cur_locInput_0,
            c1_valParam_0_1 == c1_valInput_0),
    Implies(cur_locParam_0_1 == cur_locOutput,
            c1_valParam_0_1 == c1_valOutput),
    Implies(cur_locParam_0_1 == cur_locParam_0_0,
            c1_valParam_0_1 == c1_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locInput_0,
            c1_valReturn_0 == c1_valInput_0),
    Implies(cur_locReturn_0 == cur_locOutput,
            c1_valReturn_0 == c1_valOutput),
    Implies(cur_locReturn_0 == cur_locParam_0_0,
            c1_valReturn_0 == c1_valParam_0_0),
    Implies(cur_locReturn_0 == cur_locParam_0_1,
            c1_valReturn_0 == c1_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locInput_0,
            c1_valParam_1_0 == c1_valInput_0),
    Implies(cur_locParam_1_0 == cur_locOutput,
            c1_valParam_1_0 == c1_valOutput),
    Implies(cur_locParam_1_0 == cur_locParam_0_0,
            c1_valParam_1_0 == c1_valParam_0_0),
    Implies(cur_locParam_1_0 == cur_locParam_0_1,
            c1_valParam_1_0 == c1_valParam_0_1),
    Implies(cur_locParam_1_0 == cur_locReturn_0,
            c1_valParam_1_0 == c1_valReturn_0),
    Implies(cur_locReturn_1 == cur_locInput_0,
            c1_valReturn_1 == c1_valInput_0),
    Implies(cur_locReturn_1 == cur_locOutput,
            c1_valReturn_1 == c1_valOutput),
    Implies(cur_locReturn_1 == cur_locParam_0_0,
            c1_valReturn_1 == c1_valParam_0_0),
    Implies(cur_locReturn_1 == cur_locParam_0_1,
            c1_valReturn_1 == c1_valParam_0_1),
    Implies(cur_locReturn_1 == cur_locReturn_0,
            c1_valReturn_1 == c1_valReturn_0),
    Implies(cur_locReturn_1 == cur_locParam_1_0,
            c1_valReturn_1 == c1_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locInput_0,
            c1_valParam_2_0 == c1_valInput_0),
    Implies(cur_locParam_2_0 == cur_locOutput,
            c1_valParam_2_0 == c1_valOutput),
    Implies(cur_locParam_2_0 == cur_locParam_0_0,
            c1_valParam_2_0 == c1_valParam_0_0),
    Implies(cur_locParam_2_0 == cur_locParam_0_1,
            c1_valParam_2_0 == c1_valParam_0_1),
    Implies(cur_locParam_2_0 == cur_locReturn_0,
            c1_valParam_2_0 == c1_valReturn_0),
    Implies(cur_locParam_2_0 == cur_locParam_1_0,
            c1_valParam_2_0 == c1_valParam_1_0),
    Implies(cur_locParam_2_0 == cur_locReturn_1,
            c1_valParam_2_0 == c1_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locInput_0,
            c1_valParam_2_1 == c1_valInput_0),
    Implies(cur_locParam_2_1 == cur_locOutput,
            c1_valParam_2_1 == c1_valOutput),
    Implies(cur_locParam_2_1 == cur_locParam_0_0,
            c1_valParam_2_1 == c1_valParam_0_0),
    Implies(cur_locParam_2_1 == cur_locParam_0_1,
            c1_valParam_2_1 == c1_valParam_0_1),
    Implies(cur_locParam_2_1 == cur_locReturn_0,
            c1_valParam_2_1 == c1_valReturn_0),
    Implies(cur_locParam_2_1 == cur_locParam_1_0,
            c1_valParam_2_1 == c1_valParam_1_0),
    Implies(cur_locParam_2_1 == cur_locReturn_1,
            c1_valParam_2_1 == c1_valReturn_1),
    Implies(cur_locParam_2_1 == cur_locParam_2_0,
            c1_valParam_2_1 == c1_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locInput_0,
            c1_valReturn_2 == c1_valInput_0),
    Implies(cur_locReturn_2 == cur_locOutput,
            c1_valReturn_2 == c1_valOutput),
    Implies(cur_locReturn_2 == cur_locParam_0_0,
            c1_valReturn_2 == c1_valParam_0_0),
    Implies(cur_locReturn_2 == cur_locParam_0_1,
            c1_valReturn_2 == c1_valParam_0_1),
    Implies(cur_locReturn_2 == cur_locReturn_0,
            c1_valReturn_2 == c1_valReturn_0),
    Implies(cur_locReturn_2 == cur_locParam_1_0,
            c1_valReturn_2 == c1_valParam_1_0),
    Implies(cur_locReturn_2 == cur_locReturn_1,
            c1_valReturn_2 == c1_valReturn_1),
    Implies(cur_locReturn_2 == cur_locParam_2_0,
            c1_valReturn_2 == c1_valParam_2_0),
    Implies(cur_locReturn_2 == cur_locParam_2_1,
            c1_valReturn_2 == c1_valParam_2_1))



synthesizer adding spec:
c1_valOutput == c1_valInput_0 | c1_valInput_0 + 1



add new... to verifier:


verifier adding new_cons:
65 == c1_valInput_0
> Running iteration 2 ...



syn_model in iteration  2 :

[c0_valReturn_0 = 255,
 c0_valReturn_1 = 128,
 cur_locParam_0_1 = 1,
 c0_valOutput = 255,
 c0_valReturn_2 = 255,
 cur_locInput_0 = 0,
 c1_valParam_2_1 = 66,
 cur_locReturn_1 = 1,
 c0_valParam_2_0 = 127,
 c1_valReturn_0 = 131,
 cur_locParam_0_0 = 0,
 c1_valReturn_2 = 67,
 cur_locOutput = 3,
 c1_valParam_0_1 = 66,
 c0_valParam_0_1 = 128,
 c1_valInput_0 = 65,
 c0_valParam_2_1 = 128,
 c1_valReturn_1 = 66,
 cur_locReturn_0 = 2,
 cur_locReturn_2 = 3,
 c1_valParam_1_0 = 65,
 c0_valParam_1_0 = 127,
 c1_valParam_0_0 = 65,
 c1_valOutput = 67,
 c0_valInput_0 = 127,
 c0_valParam_0_0 = 127,
 cur_locParam_2_1 = 1,
 cur_locParam_1_0 = 0,
 cur_locParam_2_0 = 0,
 c1_valParam_2_0 = 65]



add lInput to verifier:
0 == cur_locInput_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_0_0



add lparams to verifier:
1 == cur_locParam_0_1



add lRet to verifier:
2 == cur_locReturn_0



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_1_0



add lRet to verifier:
1 == cur_locReturn_1



add new... to verifier:



add lparams to verifier:
0 == cur_locParam_2_0



add lparams to verifier:
1 == cur_locParam_2_1



add lRet to verifier:
3 == cur_locReturn_2



add lOutput to verifier:
3 == cur_locOutput
Current length = 2
def f(x0):
    v0 = x0 + 1
    v2 = x0 | v0
    return v2
PS D:\2023-Spring\Synthesis\Project\python-brahma-master\python-brahma-master> 